{
  "version": 3,
  "sources": [
    "/Users/kierannelson/Development/waypoint-contracts-algorand/waypoint/projects/waypoint/smart_contracts/waypoint_router/waypoint_router.algo.ts"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAeA;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;AAAA;;AA2EG;;AAAA;AAAA;AAAA;;AAAA;AA3EH;;;AAAA;AAAA;;AA2EG;;;AAAA;;AAVA;;AAAA;AAAA;AAAA;;AAAA;AAjEH;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAiEG;;;AAAA;;AA9BA;;AAAA;AAAA;AAAA;;AAAA;AAnCH;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAmCG;;;AAAA;;AAhBA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAnBH;;;AAAA;AAAA;;AAmBG;;;AAAA;;AAAD;;;AAjBA;AAmBE;;AAAA;;AAcF;;;AAhCA;;;;;;;;;;;;;;;;;;AAyCE;;AAAA;AAxCF;AAyCE;;AAAA;AAxCF;AAyCE;;AAAA;AAxCF;;AAyCE;;AAAA;AAxCF;;AAyCE;;AAAA;AAxCF;;;;;;;;;;;;;;;;;;AAyCE;;AAAA;AAxCF;;;;;;;;;;;;;;;;AAyC8B;AAA5B;AAvCF;AAwCsC;;AAApC;;AAcF;;;AAEgB;;AAjEhB;AAAA;AAAA;AAAA;AAiES;AAAP;AA/DF;AAgEE;;AAAA;AA/DF;AAgEE;;AAAA;AA/DF;;AAgEE;;AAAA;AA/DF;;AAgEE;;AAAA;AA5DF;AA6DsC;;AAApC;;AAGF;;;AAEgB;;AA3EhB;AAAA;AAAA;AAAA;AA2ES;AAAP;AA3EF;AA4EE;;AAAA;AAnEF;AAoEsC;;AAApC;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "@algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1"
    },
    "5": {
      "op": "bytecblock \"admin_account\" \"last_updated\" \"fee_bps\" \"creation_fee_algos\" \"min_duration\" \"max_duration\""
    },
    "87": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "89": {
      "op": "bz main_after_if_else@10",
      "stack_out": []
    },
    "92": {
      "op": "pushbytess 0xda53fefe 0x2626198d 0xf3b2b70c 0x82ab1ec4 // method \"createApplication(account)void\", method \"initApplication(account,uint64,uint64,uint64,uint64,uint64)void\", method \"updateParams(uint64,uint64,uint64,uint64)void\", method \"updateAdmin(account)void\"",
      "defined_out": [
        "Method(createApplication(account)void)",
        "Method(initApplication(account,uint64,uint64,uint64,uint64,uint64)void)",
        "Method(updateAdmin(account)void)",
        "Method(updateParams(uint64,uint64,uint64,uint64)void)"
      ],
      "stack_out": [
        "Method(createApplication(account)void)",
        "Method(initApplication(account,uint64,uint64,uint64,uint64,uint64)void)",
        "Method(updateParams(uint64,uint64,uint64,uint64)void)",
        "Method(updateAdmin(account)void)"
      ]
    },
    "114": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(createApplication(account)void)",
        "Method(initApplication(account,uint64,uint64,uint64,uint64,uint64)void)",
        "Method(updateAdmin(account)void)",
        "Method(updateParams(uint64,uint64,uint64,uint64)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(createApplication(account)void)",
        "Method(initApplication(account,uint64,uint64,uint64,uint64,uint64)void)",
        "Method(updateParams(uint64,uint64,uint64,uint64)void)",
        "Method(updateAdmin(account)void)",
        "tmp%2#0"
      ]
    },
    "117": {
      "op": "match main_createApplication_route@3 main_initApplication_route@4 main_updateParams_route@5 main_updateAdmin_route@6",
      "stack_out": []
    },
    "127": {
      "block": "main_after_if_else@10",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "128": {
      "op": "return",
      "stack_out": []
    },
    "129": {
      "block": "main_updateAdmin_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "131": {
      "op": "!",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "132": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "133": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "135": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "136": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%2#0"
      ]
    },
    "139": {
      "op": "btoi",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "140": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "142": {
      "callsub": "smart_contracts/waypoint_router/waypoint_router.algo.ts::WaypointRouter.updateAdmin",
      "op": "callsub updateAdmin",
      "stack_out": []
    },
    "145": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "146": {
      "op": "return",
      "stack_out": []
    },
    "147": {
      "block": "main_updateParams_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "149": {
      "op": "!",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "150": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "151": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "153": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "154": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%5#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%5#0"
      ]
    },
    "157": {
      "op": "btoi",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "158": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[8]%6#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0",
        "reinterpret_bytes[8]%6#0"
      ]
    },
    "161": {
      "op": "btoi",
      "defined_out": [
        "tmp%24#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%24#0",
        "tmp%25#0"
      ]
    },
    "162": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[8]%7#0",
        "tmp%24#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%24#0",
        "tmp%25#0",
        "reinterpret_bytes[8]%7#0"
      ]
    },
    "165": {
      "op": "btoi",
      "defined_out": [
        "tmp%24#0",
        "tmp%25#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%24#0",
        "tmp%25#0",
        "tmp%26#0"
      ]
    },
    "166": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "reinterpret_bytes[8]%8#0",
        "tmp%24#0",
        "tmp%25#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%24#0",
        "tmp%25#0",
        "tmp%26#0",
        "reinterpret_bytes[8]%8#0"
      ]
    },
    "169": {
      "op": "btoi",
      "defined_out": [
        "tmp%24#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%24#0",
        "tmp%25#0",
        "tmp%26#0",
        "tmp%27#0"
      ]
    },
    "170": {
      "callsub": "smart_contracts/waypoint_router/waypoint_router.algo.ts::WaypointRouter.updateParams",
      "op": "callsub updateParams",
      "stack_out": []
    },
    "173": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "174": {
      "op": "return",
      "stack_out": []
    },
    "175": {
      "block": "main_initApplication_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "177": {
      "op": "!",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "178": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "179": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "181": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "182": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%1#0"
      ]
    },
    "185": {
      "op": "btoi",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "186": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "188": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[8]%0#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "191": {
      "op": "btoi",
      "defined_out": [
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%15#0"
      ]
    },
    "192": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[8]%1#0",
        "tmp%14#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%15#0",
        "reinterpret_bytes[8]%1#0"
      ]
    },
    "195": {
      "op": "btoi",
      "defined_out": [
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0"
      ]
    },
    "196": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "reinterpret_bytes[8]%2#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "reinterpret_bytes[8]%2#0"
      ]
    },
    "199": {
      "op": "btoi",
      "defined_out": [
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ]
    },
    "200": {
      "op": "txna ApplicationArgs 5",
      "defined_out": [
        "reinterpret_bytes[8]%3#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "reinterpret_bytes[8]%3#0"
      ]
    },
    "203": {
      "op": "btoi",
      "defined_out": [
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0"
      ]
    },
    "204": {
      "op": "txna ApplicationArgs 6",
      "defined_out": [
        "reinterpret_bytes[8]%4#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0",
        "reinterpret_bytes[8]%4#0"
      ]
    },
    "207": {
      "op": "btoi",
      "defined_out": [
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%18#0",
        "tmp%19#0"
      ]
    },
    "208": {
      "callsub": "smart_contracts/waypoint_router/waypoint_router.algo.ts::WaypointRouter.initApplication",
      "op": "callsub initApplication",
      "stack_out": []
    },
    "211": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "212": {
      "op": "return",
      "stack_out": []
    },
    "213": {
      "block": "main_createApplication_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "215": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "216": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "217": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "219": {
      "op": "!",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "220": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "221": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%0#0"
      ]
    },
    "224": {
      "op": "btoi",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "225": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "227": {
      "callsub": "smart_contracts/waypoint_router/waypoint_router.algo.ts::WaypointRouter.createApplication",
      "op": "callsub createApplication",
      "stack_out": []
    },
    "230": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "231": {
      "op": "return",
      "stack_out": []
    },
    "232": {
      "subroutine": "smart_contracts/waypoint_router/waypoint_router.algo.ts::WaypointRouter.createApplication",
      "params": {
        "admin#0": "bytes"
      },
      "block": "createApplication",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "235": {
      "op": "bytec_0 // \"admin_account\"",
      "defined_out": [
        "\"admin_account\""
      ],
      "stack_out": [
        "\"admin_account\""
      ]
    },
    "236": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"admin_account\"",
        "admin#0 (copy)"
      ],
      "stack_out": [
        "\"admin_account\"",
        "admin#0 (copy)"
      ]
    },
    "238": {
      "op": "app_global_put",
      "stack_out": []
    },
    "239": {
      "retsub": true,
      "op": "retsub"
    },
    "240": {
      "subroutine": "smart_contracts/waypoint_router/waypoint_router.algo.ts::WaypointRouter.initApplication",
      "params": {
        "treasury_account#0": "bytes",
        "fee_bps#0": "uint64",
        "creation_fee_algos#0": "uint64",
        "min_duration#0": "uint64",
        "max_duration#0": "uint64",
        "contract_version#0": "uint64"
      },
      "block": "initApplication",
      "stack_in": [],
      "op": "proto 6 0"
    },
    "243": {
      "op": "pushbytes \"treasury_account\"",
      "defined_out": [
        "\"treasury_account\""
      ],
      "stack_out": [
        "\"treasury_account\""
      ]
    },
    "261": {
      "op": "frame_dig -6",
      "defined_out": [
        "\"treasury_account\"",
        "treasury_account#0 (copy)"
      ],
      "stack_out": [
        "\"treasury_account\"",
        "treasury_account#0 (copy)"
      ]
    },
    "263": {
      "op": "app_global_put",
      "stack_out": []
    },
    "264": {
      "op": "bytec_2 // \"fee_bps\"",
      "defined_out": [
        "\"fee_bps\""
      ],
      "stack_out": [
        "\"fee_bps\""
      ]
    },
    "265": {
      "op": "frame_dig -5",
      "defined_out": [
        "\"fee_bps\"",
        "fee_bps#0 (copy)"
      ],
      "stack_out": [
        "\"fee_bps\"",
        "fee_bps#0 (copy)"
      ]
    },
    "267": {
      "op": "app_global_put",
      "stack_out": []
    },
    "268": {
      "op": "bytec_3 // \"creation_fee_algos\"",
      "defined_out": [
        "\"creation_fee_algos\""
      ],
      "stack_out": [
        "\"creation_fee_algos\""
      ]
    },
    "269": {
      "op": "frame_dig -4",
      "defined_out": [
        "\"creation_fee_algos\"",
        "creation_fee_algos#0 (copy)"
      ],
      "stack_out": [
        "\"creation_fee_algos\"",
        "creation_fee_algos#0 (copy)"
      ]
    },
    "271": {
      "op": "app_global_put",
      "stack_out": []
    },
    "272": {
      "op": "bytec 4 // \"min_duration\"",
      "defined_out": [
        "\"min_duration\""
      ],
      "stack_out": [
        "\"min_duration\""
      ]
    },
    "274": {
      "op": "frame_dig -3",
      "defined_out": [
        "\"min_duration\"",
        "min_duration#0 (copy)"
      ],
      "stack_out": [
        "\"min_duration\"",
        "min_duration#0 (copy)"
      ]
    },
    "276": {
      "op": "app_global_put",
      "stack_out": []
    },
    "277": {
      "op": "bytec 5 // \"max_duration\"",
      "defined_out": [
        "\"max_duration\""
      ],
      "stack_out": [
        "\"max_duration\""
      ]
    },
    "279": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"max_duration\"",
        "max_duration#0 (copy)"
      ],
      "stack_out": [
        "\"max_duration\"",
        "max_duration#0 (copy)"
      ]
    },
    "281": {
      "op": "app_global_put",
      "stack_out": []
    },
    "282": {
      "op": "pushbytes \"contract_version\"",
      "defined_out": [
        "\"contract_version\""
      ],
      "stack_out": [
        "\"contract_version\""
      ]
    },
    "300": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"contract_version\"",
        "contract_version#0 (copy)"
      ],
      "stack_out": [
        "\"contract_version\"",
        "contract_version#0 (copy)"
      ]
    },
    "302": {
      "op": "app_global_put",
      "stack_out": []
    },
    "303": {
      "op": "pushbytes \"routes_created\"",
      "defined_out": [
        "\"routes_created\""
      ],
      "stack_out": [
        "\"routes_created\""
      ]
    },
    "319": {
      "op": "intc_0 // 0",
      "defined_out": [
        "\"routes_created\"",
        "0"
      ],
      "stack_out": [
        "\"routes_created\"",
        "0"
      ]
    },
    "320": {
      "op": "app_global_put",
      "stack_out": []
    },
    "321": {
      "op": "bytec_1 // \"last_updated\"",
      "defined_out": [
        "\"last_updated\""
      ],
      "stack_out": [
        "\"last_updated\""
      ]
    },
    "322": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "\"last_updated\"",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "\"last_updated\"",
        "new_state_value%0#0"
      ]
    },
    "324": {
      "op": "app_global_put",
      "stack_out": []
    },
    "325": {
      "retsub": true,
      "op": "retsub"
    },
    "326": {
      "subroutine": "smart_contracts/waypoint_router/waypoint_router.algo.ts::WaypointRouter.updateParams",
      "params": {
        "fee_bps#0": "uint64",
        "creation_fee_algos#0": "uint64",
        "min_duration#0": "uint64",
        "max_duration#0": "uint64"
      },
      "block": "updateParams",
      "stack_in": [],
      "op": "proto 4 0"
    },
    "329": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "331": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "332": {
      "op": "bytec_0 // \"admin_account\"",
      "defined_out": [
        "\"admin_account\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"admin_account\""
      ]
    },
    "333": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "334": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "335": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "336": {
      "error": "Only admin can update params",
      "op": "assert // Only admin can update params",
      "stack_out": []
    },
    "337": {
      "op": "bytec_2 // \"fee_bps\"",
      "defined_out": [
        "\"fee_bps\""
      ],
      "stack_out": [
        "\"fee_bps\""
      ]
    },
    "338": {
      "op": "frame_dig -4",
      "defined_out": [
        "\"fee_bps\"",
        "fee_bps#0 (copy)"
      ],
      "stack_out": [
        "\"fee_bps\"",
        "fee_bps#0 (copy)"
      ]
    },
    "340": {
      "op": "app_global_put",
      "stack_out": []
    },
    "341": {
      "op": "bytec_3 // \"creation_fee_algos\"",
      "defined_out": [
        "\"creation_fee_algos\""
      ],
      "stack_out": [
        "\"creation_fee_algos\""
      ]
    },
    "342": {
      "op": "frame_dig -3",
      "defined_out": [
        "\"creation_fee_algos\"",
        "creation_fee_algos#0 (copy)"
      ],
      "stack_out": [
        "\"creation_fee_algos\"",
        "creation_fee_algos#0 (copy)"
      ]
    },
    "344": {
      "op": "app_global_put",
      "stack_out": []
    },
    "345": {
      "op": "bytec 4 // \"min_duration\"",
      "defined_out": [
        "\"min_duration\""
      ],
      "stack_out": [
        "\"min_duration\""
      ]
    },
    "347": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"min_duration\"",
        "min_duration#0 (copy)"
      ],
      "stack_out": [
        "\"min_duration\"",
        "min_duration#0 (copy)"
      ]
    },
    "349": {
      "op": "app_global_put",
      "stack_out": []
    },
    "350": {
      "op": "bytec 5 // \"max_duration\"",
      "defined_out": [
        "\"max_duration\""
      ],
      "stack_out": [
        "\"max_duration\""
      ]
    },
    "352": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"max_duration\"",
        "max_duration#0 (copy)"
      ],
      "stack_out": [
        "\"max_duration\"",
        "max_duration#0 (copy)"
      ]
    },
    "354": {
      "op": "app_global_put",
      "stack_out": []
    },
    "355": {
      "op": "bytec_1 // \"last_updated\"",
      "defined_out": [
        "\"last_updated\""
      ],
      "stack_out": [
        "\"last_updated\""
      ]
    },
    "356": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "\"last_updated\"",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "\"last_updated\"",
        "new_state_value%0#0"
      ]
    },
    "358": {
      "op": "app_global_put",
      "stack_out": []
    },
    "359": {
      "retsub": true,
      "op": "retsub"
    },
    "360": {
      "subroutine": "smart_contracts/waypoint_router/waypoint_router.algo.ts::WaypointRouter.updateAdmin",
      "params": {
        "new_admin#0": "bytes"
      },
      "block": "updateAdmin",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "363": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "365": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "366": {
      "op": "bytec_0 // \"admin_account\"",
      "defined_out": [
        "\"admin_account\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"admin_account\""
      ]
    },
    "367": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "368": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "369": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "370": {
      "error": "Only admin can update admin",
      "op": "assert // Only admin can update admin",
      "stack_out": []
    },
    "371": {
      "op": "bytec_0 // \"admin_account\"",
      "stack_out": [
        "\"admin_account\""
      ]
    },
    "372": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"admin_account\"",
        "new_admin#0 (copy)"
      ],
      "stack_out": [
        "\"admin_account\"",
        "new_admin#0 (copy)"
      ]
    },
    "374": {
      "op": "app_global_put",
      "stack_out": []
    },
    "375": {
      "op": "bytec_1 // \"last_updated\"",
      "defined_out": [
        "\"last_updated\""
      ],
      "stack_out": [
        "\"last_updated\""
      ]
    },
    "376": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "\"last_updated\"",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "\"last_updated\"",
        "new_state_value%0#0"
      ]
    },
    "378": {
      "op": "app_global_put",
      "stack_out": []
    },
    "379": {
      "retsub": true,
      "op": "retsub"
    }
  }
}