{
    "hints": {
        "createApplication(account)void": {
            "call_config": {
                "no_op": "CREATE"
            }
        },
        "initApplication(account,uint64,uint64,uint64,uint64,uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "updateParams(uint64,uint64,uint64,uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "updateAdmin(account)void": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "state": {
        "global": {
            "num_byte_slices": 2,
            "num_uints": 7
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "admin_account": {
                    "type": "bytes",
                    "key": "admin_account"
                },
                "contract_version": {
                    "type": "uint64",
                    "key": "contract_version"
                },
                "creation_fee_algos": {
                    "type": "uint64",
                    "key": "creation_fee_algos"
                },
                "fee_bps": {
                    "type": "uint64",
                    "key": "fee_bps"
                },
                "last_updated": {
                    "type": "uint64",
                    "key": "last_updated"
                },
                "max_duration": {
                    "type": "uint64",
                    "key": "max_duration"
                },
                "min_duration": {
                    "type": "uint64",
                    "key": "min_duration"
                },
                "routes_created": {
                    "type": "uint64",
                    "key": "routes_created"
                },
                "treasury_account": {
                    "type": "bytes",
                    "key": "treasury_account"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "waypoint-router",
        "methods": [
            {
                "name": "createApplication",
                "args": [
                    {
                        "type": "account",
                        "name": "admin",
                        "desc": "- The account that will have administrative privileges over the contract"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                },
                "desc": "Creates the waypoint router application and sets the initial admin account.\nThis method can only be called during contract creation."
            },
            {
                "name": "initApplication",
                "args": [
                    {
                        "type": "account",
                        "name": "treasury_account",
                        "desc": "- The account that will receive fees collected by the contract"
                    },
                    {
                        "type": "uint64",
                        "name": "fee_bps",
                        "desc": "- The fee rate in basis points (1 bps = 0.01%)"
                    },
                    {
                        "type": "uint64",
                        "name": "creation_fee_algos",
                        "desc": "- The fee in microAlgos required to create a new route"
                    },
                    {
                        "type": "uint64",
                        "name": "min_duration",
                        "desc": "- The minimum allowed duration for routes in seconds"
                    },
                    {
                        "type": "uint64",
                        "name": "max_duration",
                        "desc": "- The maximum allowed duration for routes in seconds"
                    },
                    {
                        "type": "uint64",
                        "name": "contract_version",
                        "desc": "- The version number of this contract deployment"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                },
                "desc": "Initializes the waypoint router application with configuration parameters.\nThis method sets up the core operational parameters for the contract."
            },
            {
                "name": "updateParams",
                "args": [
                    {
                        "type": "uint64",
                        "name": "fee_bps",
                        "desc": "- The new fee rate in basis points (1 bps = 0.01%)"
                    },
                    {
                        "type": "uint64",
                        "name": "creation_fee_algos",
                        "desc": "- The new fee in microAlgos required to create routes"
                    },
                    {
                        "type": "uint64",
                        "name": "min_duration",
                        "desc": "- The new minimum allowed duration for routes in seconds"
                    },
                    {
                        "type": "uint64",
                        "name": "max_duration",
                        "desc": "- The new maximum allowed duration for routes in seconds"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                },
                "desc": "Updates the operational parameters of the waypoint router contract.\nOnly the admin account can call this method to modify contract settings."
            },
            {
                "name": "updateAdmin",
                "args": [
                    {
                        "type": "account",
                        "name": "new_admin"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {}
}