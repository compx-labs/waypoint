{
  "version": 3,
  "sources": [
    "/Users/kierannelson/Development/waypoint/contracts/algorand/projects/algorand/smart_contracts/waypoint_linear/config.algo.ts",
    "/Users/kierannelson/Development/waypoint/contracts/algorand/projects/algorand/smart_contracts/waypoint_linear/waypoint-linear.algo.ts"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACyBA;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;AAAA;;AA+KG;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AAzHA;;AAAA;AAAA;AAAA;;AAAA;AAtDH;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAsDG;;;AAAA;;AAnBA;;AAAA;AAAA;AAAA;;AAAA;AAnCH;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAmCG;;;AAAA;;AAdA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AArBH;;;AAAA;AAAA;;;AAAA;AAqBG;;;AAAA;;AAAD;;;AAjBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmBE;AAC6B;;AAAA;AAjB/B;;AAiBE;AAAA;AACsB;;AAAA;AAjBxB;AAiBE;AAAA;AAXF;AAawB;AAAtB;AAZF;AAa2B;AAAzB;AAZF;;AAa6B;AAA3B;AAZF;;AAa2B;AAAzB;AAZF;;AAa8B;AAA5B;AAZF;;AAa8B;AAA5B;;AAGF;;;AAEE;;AAAA;;AACmB;;AADnB;AAAA;;;AAAA;;AAAA;;AAEU;;;;AAFV;AAAA;;;;AAAA;AAKA;AAEmB;;AACO;AArC5B;AAAA;AAAA;AAAA;AAsC2C;AACxB;;;;;;;;;AALjB;;;ADjEoC;;;ACiEpC;;;;;;AAYF;;;;;;;AAWE;;AAAA;AACA;;AAAA;AACA;;AAAA;AACA;;AAAA;AACA;;AAAA;AAEsB;;AAAA;AA/DxB;AA+DE;AAAA;AACsB;;AAAA;AA1DxB;AA0DE;AAAA;AACyB;;AAAA;AA1D3B;AA0DE;AAAA;AAC2B;;AAAA;AA1D7B;;AA0DE;AAAA;AACyB;;AAAA;AA1D3B;;AA0DE;AAAA;AAC4B;;AAAA;AA1D9B;;AA0DE;AAAA;AA/DF;;AAgEE;;AAAA;AAjEF;;AAkE4C;;AAA1C;AAvEF;AAAA;;AAAA;AAAA;AA0E0E;AACxE;AAaiB;;AAnFnB;AAAA;;AAAA;AAAA;AACA;AAAA;;AAAA;AAAA;AAwEa;;AAAqB;AA7ElC;AAAA;AAAA;AAAA;AA8E0B;AAAA;AAxE1B;AAAA;AAAA;AAAA;AA2E0B;AAAA;AA1E1B;AAAA;AAAA;AAAA;AA2E6B;AAAA;AA1E7B;AAAA;;AAAA;AAAA;AA2E+B;AAAA;AA1E/B;AAAA;;AAAA;AAAA;AA2E6B;AAAA;AA1E7B;AAAA;;AAAA;AAAA;AA2EgC;AAAA;AAX9B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;ADxGiC;;;;;;ACwGjC;AAkBe;AAEE;;AAGG;;AALL;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AD3HqB;;;AC2HrB;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAQa;AAAA;;;AAvG9B;;AAuGE;AAAA;AAC6B;AAAA;;;AAvG/B;;AAuGE;AAAA;AACmE;;;AAAA;AA3GrE;;AA2GE;AAAA;AACuC;;;AAtGzC;;AAsGE;AAAA;AAGwB;AA/G1B;AAAA;;AAAA;AAAA;AAgHE;;;AACa;AAjHf;AAAA;;AAAA;AAAA;AAoHqB;;AApHrB;AAAA;;AAAA;AAAA;AAuHwB;;AAJa;AAFtB;;;;;;;;;;;;;;;;;;AAAA;;;;AD3IuB;;;AC2IvB;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;AAUkD;;AAAA;AAAA;;AAzHjE;AAAA;;AAAA;AAAA;AA4IgD;AAAxC;;AAxIR;AAAA;;AAAA;AAAA;AA2IgD;AAA1C;;AAAA;AAAJ;;;AACM;;AAAa;AAAb;AAAJ;;;AACoB;;AAAlB;;AAoBmB;;AAAA;;AAAA;AACgB;;;AAAnB;AAAd;AAAA;;AA5CN;;;AACE;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAEe;;AAAA;;AAAA;AAFf;AAAA;;;AAAA;;AAAA;;AAGwB;;AAHxB;AAAA;;;;AAAA;AAKA;AA/HJ;AAAA;;AAAA;AAAA;;;;;;;;;;;AA+HI;;;AD5JkC;;;AC4JlC;;;;;;AAkBW;;AAAa;;AAAb;AAAJ;;;AACa;;AAAlB;;;;;AACS;;AAAa;;AAAb;AAAJ;;;AACa;;AAAlB;;;;;AACS;;AAAY;AAAZ;;;;;AAAJ;;;AACa;;AAAlB;;;;;AAGE;;AAAa;AAAb;AAAJ;;;AACoB;;AAAlB;;;;;AACS;;AAAa;;AAAb;AAAJ;;;AACa;;AAAlB;;;;;AACS;;AAAa;;AAAb;AAAJ;;;AACa;;AAAlB;;;;;AACS;;AAAY;AAAZ;;;;;AAAJ;;;AACa;;AAAlB;;;;;AASN;;;;;;;AAEgB;;AApKhB;AAAA;;AAAA;AAAA;AAoKS;AAAP;AAzKF;AAAA;AAAA;AAAA;AA0KsC;AAA9B;AACN;AAEmB;;AAAb;AAvKR;AAAA;AAAA;AAAA;AAyL8C;AAAtC;AAAA;;AACF;AAAJ;;;AACS;;;AAtLX;AAAA;;AAAA;AAAA;AAkN2D;AAAnD;AAAA;;AACF;;AAAA;AAAJ;;;AACS;;AAAA;;AAAA;AAhDT;AAAA;AAEA;AA5KF;AAAA;;AAAA;AAAA;;;;;;;;;;AA4KE;;;ADhNoC;;;ACgNpC;AAtKF;AAAA;;AAAA;AAAA;AA+K2D;AAA1B;AACH;AAhL9B;;AAgLE;AAAA;;AAuCO;AApDiB;;;AAvK1B;AAAA;AAAA;AAAA;AA6LoD;AAA5C;AAAA;;AACN;;;AACS;;;AAsBM;;;AAnBT;;AAAA;;AAAkB;AACY;AAA9B;AAAA;;AAAyB;AAjMjC;AAAA;;AAAA;AAAA;AAmMoD;AACpB;AAAA;AAAA;AArMhC;AAAA;;AAAA;AAAA;AAuMwD;AArMxD;AAAA;;AAAA;AAAA;AAsM0D;AAAlD;;AAC6B;AAAA;;AAEnC;;;;;AASe;;;AAJR;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;;AAIQ",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "@algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 4 1000"
    },
    "8": {
      "op": "bytecblock 0x0000000000000000 \"token_id\" \"start_ts\" \"period_secs\" \"payout_amount\" \"max_periods\" \"deposit_amount\" \"claimed_amount\" \"beneficiary\" \"flux_oracle_app\" \"registry_app_id\" \"depositor\" 0x151f7c75 \"fee_bps\" \"treasury\" \"nominated_asset_id\""
    },
    "200": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "202": {
      "op": "bz main_after_if_else@10",
      "stack_out": []
    },
    "205": {
      "op": "pushbytess 0x917c48b6 0x9b932c59 0xc39b0dc4 0xf1577726 // method \"createApplication(uint64,uint64)void\", method \"initApp(pay)void\", method \"createRoute(account,uint64,uint64,uint64,uint64,uint64,uint64,axfer)void\", method \"claim()void\"",
      "defined_out": [
        "Method(claim()void)",
        "Method(createApplication(uint64,uint64)void)",
        "Method(createRoute(account,uint64,uint64,uint64,uint64,uint64,uint64,axfer)void)",
        "Method(initApp(pay)void)"
      ],
      "stack_out": [
        "Method(createApplication(uint64,uint64)void)",
        "Method(initApp(pay)void)",
        "Method(createRoute(account,uint64,uint64,uint64,uint64,uint64,uint64,axfer)void)",
        "Method(claim()void)"
      ]
    },
    "227": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(claim()void)",
        "Method(createApplication(uint64,uint64)void)",
        "Method(createRoute(account,uint64,uint64,uint64,uint64,uint64,uint64,axfer)void)",
        "Method(initApp(pay)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(createApplication(uint64,uint64)void)",
        "Method(initApp(pay)void)",
        "Method(createRoute(account,uint64,uint64,uint64,uint64,uint64,uint64,axfer)void)",
        "Method(claim()void)",
        "tmp%2#0"
      ]
    },
    "230": {
      "op": "match main_createApplication_route@3 main_initApp_route@4 main_createRoute_route@5 main_claim_route@6",
      "stack_out": []
    },
    "240": {
      "block": "main_after_if_else@10",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "241": {
      "op": "return",
      "stack_out": []
    },
    "242": {
      "block": "main_claim_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "244": {
      "op": "!",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "245": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "246": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "248": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "249": {
      "callsub": "smart_contracts/waypoint_linear/waypoint-linear.algo.ts::WaypointLinear.claim",
      "op": "callsub claim"
    },
    "252": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "253": {
      "op": "return",
      "stack_out": []
    },
    "254": {
      "block": "main_createRoute_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "256": {
      "op": "!",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "257": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "258": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "260": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "261": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%0#0"
      ]
    },
    "264": {
      "op": "btoi",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "265": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "267": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[8]%2#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0",
        "reinterpret_bytes[8]%2#0"
      ]
    },
    "270": {
      "op": "btoi",
      "defined_out": [
        "tmp%19#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%19#0",
        "tmp%20#0"
      ]
    },
    "271": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[8]%3#0",
        "tmp%19#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%19#0",
        "tmp%20#0",
        "reinterpret_bytes[8]%3#0"
      ]
    },
    "274": {
      "op": "btoi",
      "defined_out": [
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0"
      ]
    },
    "275": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "reinterpret_bytes[8]%4#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "reinterpret_bytes[8]%4#0"
      ]
    },
    "278": {
      "op": "btoi",
      "defined_out": [
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0"
      ]
    },
    "279": {
      "op": "txna ApplicationArgs 5",
      "defined_out": [
        "reinterpret_bytes[8]%5#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "reinterpret_bytes[8]%5#0"
      ]
    },
    "282": {
      "op": "btoi",
      "defined_out": [
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0"
      ]
    },
    "283": {
      "op": "txna ApplicationArgs 6",
      "defined_out": [
        "reinterpret_bytes[8]%6#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "reinterpret_bytes[8]%6#0"
      ]
    },
    "286": {
      "op": "btoi",
      "defined_out": [
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0"
      ]
    },
    "287": {
      "op": "txna ApplicationArgs 7",
      "defined_out": [
        "reinterpret_bytes[8]%7#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0",
        "reinterpret_bytes[8]%7#0"
      ]
    },
    "290": {
      "op": "btoi",
      "defined_out": [
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0"
      ]
    },
    "291": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0",
        "tmp%26#0"
      ]
    },
    "293": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0",
        "tmp%26#0",
        "1"
      ]
    },
    "294": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%1#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0",
        "gtxn_idx%1#0"
      ]
    },
    "295": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0",
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)"
      ]
    },
    "296": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0",
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ]
    },
    "298": {
      "op": "intc_2 // axfer",
      "defined_out": [
        "axfer",
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0",
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "axfer"
      ]
    },
    "299": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0",
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0",
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0"
      ]
    },
    "300": {
      "error": "transaction type is axfer",
      "op": "assert // transaction type is axfer",
      "stack_out": [
        "tmp%19#0",
        "tmp%20#0",
        "tmp%21#0",
        "tmp%22#0",
        "tmp%23#0",
        "tmp%24#0",
        "tmp%25#0",
        "gtxn_idx%1#0"
      ]
    },
    "301": {
      "callsub": "smart_contracts/waypoint_linear/waypoint-linear.algo.ts::WaypointLinear.createRoute",
      "op": "callsub createRoute",
      "stack_out": []
    },
    "304": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "305": {
      "op": "return",
      "stack_out": []
    },
    "306": {
      "block": "main_initApp_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "308": {
      "op": "!",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "309": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "310": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "312": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "313": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "315": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "1"
      ]
    },
    "316": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "317": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ]
    },
    "318": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ]
    },
    "320": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "321": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "322": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "323": {
      "callsub": "smart_contracts/waypoint_linear/waypoint-linear.algo.ts::WaypointLinear.initApp",
      "op": "callsub initApp",
      "stack_out": []
    },
    "326": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "327": {
      "op": "return",
      "stack_out": []
    },
    "328": {
      "block": "main_createApplication_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "330": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "331": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "332": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "334": {
      "op": "!",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "335": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "336": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "339": {
      "op": "btoi",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "340": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[8]%1#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "reinterpret_bytes[8]%1#0"
      ]
    },
    "343": {
      "op": "btoi",
      "defined_out": [
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "344": {
      "callsub": "smart_contracts/waypoint_linear/waypoint-linear.algo.ts::WaypointLinear.createApplication",
      "op": "callsub createApplication",
      "stack_out": []
    },
    "347": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "348": {
      "op": "return",
      "stack_out": []
    },
    "349": {
      "subroutine": "smart_contracts/waypoint_linear/waypoint-linear.algo.ts::WaypointLinear.createApplication",
      "params": {
        "registryAppId#0": "uint64",
        "tokenId#0": "uint64"
      },
      "block": "createApplication",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "352": {
      "op": "pushbytess \"contract_version\" 0x00000000000003e8 // \"contract_version\", 0x00000000000003e8",
      "defined_out": [
        "\"contract_version\"",
        "0x00000000000003e8"
      ],
      "stack_out": [
        "\"contract_version\"",
        "0x00000000000003e8"
      ]
    },
    "380": {
      "op": "app_global_put",
      "stack_out": []
    },
    "381": {
      "op": "frame_dig -2",
      "defined_out": [
        "registryAppId#0 (copy)"
      ],
      "stack_out": [
        "registryAppId#0 (copy)"
      ]
    },
    "383": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "384": {
      "op": "bytec 10 // \"registry_app_id\"",
      "defined_out": [
        "\"registry_app_id\"",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "\"registry_app_id\""
      ]
    },
    "386": {
      "op": "swap",
      "stack_out": [
        "\"registry_app_id\"",
        "val_as_bytes%0#0"
      ]
    },
    "387": {
      "op": "app_global_put",
      "stack_out": []
    },
    "388": {
      "op": "frame_dig -1",
      "defined_out": [
        "tokenId#0 (copy)"
      ],
      "stack_out": [
        "tokenId#0 (copy)"
      ]
    },
    "390": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0"
      ]
    },
    "391": {
      "op": "bytec_1 // \"token_id\"",
      "defined_out": [
        "\"token_id\"",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0",
        "\"token_id\""
      ]
    },
    "392": {
      "op": "swap",
      "stack_out": [
        "\"token_id\"",
        "val_as_bytes%1#0"
      ]
    },
    "393": {
      "op": "app_global_put",
      "stack_out": []
    },
    "394": {
      "op": "bytec_2 // \"start_ts\"",
      "defined_out": [
        "\"start_ts\""
      ],
      "stack_out": [
        "\"start_ts\""
      ]
    },
    "395": {
      "op": "bytec_0 // 0x0000000000000000",
      "defined_out": [
        "\"start_ts\"",
        "0x0000000000000000"
      ],
      "stack_out": [
        "\"start_ts\"",
        "0x0000000000000000"
      ]
    },
    "396": {
      "op": "app_global_put",
      "stack_out": []
    },
    "397": {
      "op": "bytec_3 // \"period_secs\"",
      "defined_out": [
        "\"period_secs\""
      ],
      "stack_out": [
        "\"period_secs\""
      ]
    },
    "398": {
      "op": "bytec_0 // 0x0000000000000000",
      "stack_out": [
        "\"period_secs\"",
        "0x0000000000000000"
      ]
    },
    "399": {
      "op": "app_global_put",
      "stack_out": []
    },
    "400": {
      "op": "bytec 4 // \"payout_amount\"",
      "defined_out": [
        "\"payout_amount\""
      ],
      "stack_out": [
        "\"payout_amount\""
      ]
    },
    "402": {
      "op": "bytec_0 // 0x0000000000000000",
      "stack_out": [
        "\"payout_amount\"",
        "0x0000000000000000"
      ]
    },
    "403": {
      "op": "app_global_put",
      "stack_out": []
    },
    "404": {
      "op": "bytec 5 // \"max_periods\"",
      "defined_out": [
        "\"max_periods\""
      ],
      "stack_out": [
        "\"max_periods\""
      ]
    },
    "406": {
      "op": "bytec_0 // 0x0000000000000000",
      "stack_out": [
        "\"max_periods\"",
        "0x0000000000000000"
      ]
    },
    "407": {
      "op": "app_global_put",
      "stack_out": []
    },
    "408": {
      "op": "bytec 6 // \"deposit_amount\"",
      "defined_out": [
        "\"deposit_amount\""
      ],
      "stack_out": [
        "\"deposit_amount\""
      ]
    },
    "410": {
      "op": "bytec_0 // 0x0000000000000000",
      "stack_out": [
        "\"deposit_amount\"",
        "0x0000000000000000"
      ]
    },
    "411": {
      "op": "app_global_put",
      "stack_out": []
    },
    "412": {
      "op": "bytec 7 // \"claimed_amount\"",
      "defined_out": [
        "\"claimed_amount\""
      ],
      "stack_out": [
        "\"claimed_amount\""
      ]
    },
    "414": {
      "op": "bytec_0 // 0x0000000000000000",
      "stack_out": [
        "\"claimed_amount\"",
        "0x0000000000000000"
      ]
    },
    "415": {
      "op": "app_global_put",
      "stack_out": []
    },
    "416": {
      "retsub": true,
      "op": "retsub"
    },
    "417": {
      "subroutine": "smart_contracts/waypoint_linear/waypoint-linear.algo.ts::WaypointLinear.initApp",
      "params": {
        "mbrTxn#0": "uint64"
      },
      "block": "initApp",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "420": {
      "op": "frame_dig -1",
      "defined_out": [
        "mbrTxn#0 (copy)"
      ],
      "stack_out": [
        "mbrTxn#0 (copy)"
      ]
    },
    "422": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "424": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "426": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "427": {
      "op": "bz initApp_bool_false@3",
      "stack_out": []
    },
    "430": {
      "op": "frame_dig -1",
      "stack_out": [
        "mbrTxn#0 (copy)"
      ]
    },
    "432": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "434": {
      "op": "pushint 400000 // 400000",
      "defined_out": [
        "400000",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "400000"
      ]
    },
    "438": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "439": {
      "op": "bz initApp_bool_false@3",
      "stack_out": []
    },
    "442": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "443": {
      "block": "initApp_bool_merge@4",
      "stack_in": [
        "and_result%0#0"
      ],
      "error": "assert target is match for conditions",
      "op": "assert // assert target is match for conditions",
      "defined_out": [],
      "stack_out": []
    },
    "444": {
      "op": "itxn_begin"
    },
    "445": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "447": {
      "op": "dup",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "448": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "0"
      ]
    },
    "449": {
      "op": "bytec_1 // \"token_id\"",
      "defined_out": [
        "\"token_id\"",
        "0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "0",
        "\"token_id\""
      ]
    },
    "450": {
      "op": "app_global_get_ex",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "451": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "maybe_value%0#0"
      ]
    },
    "452": {
      "op": "btoi",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "453": {
      "op": "intc_0 // 0",
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "0"
      ]
    },
    "454": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "456": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "458": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "460": {
      "op": "itxn_field Sender",
      "stack_out": []
    },
    "462": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4"
      ],
      "stack_out": [
        "4"
      ]
    },
    "463": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "465": {
      "op": "intc_3 // 1000",
      "defined_out": [
        "1000"
      ],
      "stack_out": [
        "1000"
      ]
    },
    "466": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "468": {
      "op": "itxn_submit"
    },
    "469": {
      "retsub": true,
      "op": "retsub"
    },
    "470": {
      "block": "initApp_bool_false@3",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "471": {
      "op": "b initApp_bool_merge@4"
    },
    "474": {
      "subroutine": "smart_contracts/waypoint_linear/waypoint-linear.algo.ts::WaypointLinear.createRoute",
      "params": {
        "beneficiary#0": "bytes",
        "startTs#0": "uint64",
        "periodSecs#0": "uint64",
        "payoutAmount#0": "uint64",
        "maxPeriods#0": "uint64",
        "depositAmount#0": "uint64",
        "tokenId#0": "uint64",
        "tokenTransfer#0": "uint64"
      },
      "block": "createRoute",
      "stack_in": [],
      "op": "proto 8 0"
    },
    "477": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "effectiveFeeBps#1"
      ]
    },
    "479": {
      "op": "dupn 3",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3"
      ]
    },
    "481": {
      "op": "frame_dig -6",
      "defined_out": [
        "periodSecs#0 (copy)"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "periodSecs#0 (copy)"
      ]
    },
    "483": {
      "error": "Period seconds must be greater than 0",
      "op": "assert // Period seconds must be greater than 0",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3"
      ]
    },
    "484": {
      "op": "frame_dig -4",
      "defined_out": [
        "maxPeriods#0 (copy)"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "maxPeriods#0 (copy)"
      ]
    },
    "486": {
      "error": "Max periods must be greater than 0",
      "op": "assert // Max periods must be greater than 0",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3"
      ]
    },
    "487": {
      "op": "frame_dig -5",
      "defined_out": [
        "payoutAmount#0 (copy)"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "payoutAmount#0 (copy)"
      ]
    },
    "489": {
      "error": "Payout amount must be greater than 0",
      "op": "assert // Payout amount must be greater than 0",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3"
      ]
    },
    "490": {
      "op": "frame_dig -3",
      "defined_out": [
        "depositAmount#0 (copy)"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "depositAmount#0 (copy)"
      ]
    },
    "492": {
      "error": "Deposit amount must be greater than 0",
      "op": "assert // Deposit amount must be greater than 0",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3"
      ]
    },
    "493": {
      "op": "frame_dig -2",
      "defined_out": [
        "tokenId#0 (copy)"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "tokenId#0 (copy)"
      ]
    },
    "495": {
      "error": "Token ID must be greater than 0",
      "op": "assert // Token ID must be greater than 0",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3"
      ]
    },
    "496": {
      "op": "frame_dig -2",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "tokenId#0 (copy)"
      ]
    },
    "498": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "val_as_bytes%0#0"
      ]
    },
    "499": {
      "op": "bytec_1 // \"token_id\"",
      "defined_out": [
        "\"token_id\"",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "val_as_bytes%0#0",
        "\"token_id\""
      ]
    },
    "500": {
      "op": "swap",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "\"token_id\"",
        "val_as_bytes%0#0"
      ]
    },
    "501": {
      "op": "app_global_put",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3"
      ]
    },
    "502": {
      "op": "frame_dig -7",
      "defined_out": [
        "startTs#0 (copy)"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "startTs#0 (copy)"
      ]
    },
    "504": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "val_as_bytes%1#0"
      ]
    },
    "505": {
      "op": "bytec_2 // \"start_ts\"",
      "defined_out": [
        "\"start_ts\"",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "val_as_bytes%1#0",
        "\"start_ts\""
      ]
    },
    "506": {
      "op": "swap",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "\"start_ts\"",
        "val_as_bytes%1#0"
      ]
    },
    "507": {
      "op": "app_global_put",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3"
      ]
    },
    "508": {
      "op": "frame_dig -6",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "periodSecs#0 (copy)"
      ]
    },
    "510": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "val_as_bytes%2#0"
      ]
    },
    "511": {
      "op": "bytec_3 // \"period_secs\"",
      "defined_out": [
        "\"period_secs\"",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "val_as_bytes%2#0",
        "\"period_secs\""
      ]
    },
    "512": {
      "op": "swap",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "\"period_secs\"",
        "val_as_bytes%2#0"
      ]
    },
    "513": {
      "op": "app_global_put",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3"
      ]
    },
    "514": {
      "op": "frame_dig -5",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "payoutAmount#0 (copy)"
      ]
    },
    "516": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "val_as_bytes%3#0"
      ]
    },
    "517": {
      "op": "bytec 4 // \"payout_amount\"",
      "defined_out": [
        "\"payout_amount\"",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "val_as_bytes%3#0",
        "\"payout_amount\""
      ]
    },
    "519": {
      "op": "swap",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "\"payout_amount\"",
        "val_as_bytes%3#0"
      ]
    },
    "520": {
      "op": "app_global_put",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3"
      ]
    },
    "521": {
      "op": "frame_dig -4",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "maxPeriods#0 (copy)"
      ]
    },
    "523": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "val_as_bytes%4#0"
      ]
    },
    "524": {
      "op": "bytec 5 // \"max_periods\"",
      "defined_out": [
        "\"max_periods\"",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "val_as_bytes%4#0",
        "\"max_periods\""
      ]
    },
    "526": {
      "op": "swap",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "\"max_periods\"",
        "val_as_bytes%4#0"
      ]
    },
    "527": {
      "op": "app_global_put",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3"
      ]
    },
    "528": {
      "op": "frame_dig -3",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "depositAmount#0 (copy)"
      ]
    },
    "530": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "val_as_bytes%5#0"
      ]
    },
    "531": {
      "op": "bytec 6 // \"deposit_amount\"",
      "defined_out": [
        "\"deposit_amount\"",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "val_as_bytes%5#0",
        "\"deposit_amount\""
      ]
    },
    "533": {
      "op": "swap",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "\"deposit_amount\"",
        "val_as_bytes%5#0"
      ]
    },
    "534": {
      "op": "app_global_put",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3"
      ]
    },
    "535": {
      "op": "bytec 8 // \"beneficiary\"",
      "defined_out": [
        "\"beneficiary\""
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "\"beneficiary\""
      ]
    },
    "537": {
      "op": "frame_dig -8",
      "defined_out": [
        "\"beneficiary\"",
        "beneficiary#0 (copy)"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "\"beneficiary\"",
        "beneficiary#0 (copy)"
      ]
    },
    "539": {
      "op": "app_global_put",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3"
      ]
    },
    "540": {
      "op": "bytec 11 // \"depositor\"",
      "defined_out": [
        "\"depositor\""
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "\"depositor\""
      ]
    },
    "542": {
      "op": "txn Sender",
      "defined_out": [
        "\"depositor\"",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "\"depositor\"",
        "new_state_value%0#0"
      ]
    },
    "544": {
      "op": "app_global_put",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3"
      ]
    },
    "545": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "0"
      ]
    },
    "546": {
      "op": "bytec 10 // \"registry_app_id\"",
      "defined_out": [
        "\"registry_app_id\"",
        "0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "0",
        "\"registry_app_id\""
      ]
    },
    "548": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "549": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "maybe_value%0#0"
      ]
    },
    "550": {
      "op": "btoi",
      "defined_out": [
        "registryApp#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0"
      ]
    },
    "551": {
      "op": "itxn_begin"
    },
    "552": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "registryApp#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "554": {
      "op": "intc_0 // 0",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "0"
      ]
    },
    "555": {
      "op": "bytec 11 // \"depositor\"",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "0",
        "\"depositor\""
      ]
    },
    "557": {
      "op": "app_global_get_ex",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "registryApp#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "558": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0"
      ]
    },
    "559": {
      "op": "intc_0 // 0",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "0"
      ]
    },
    "560": {
      "op": "bytec 8 // \"beneficiary\"",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "0",
        "\"beneficiary\""
      ]
    },
    "562": {
      "op": "app_global_get_ex",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_exists%2#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "registryApp#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "563": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0"
      ]
    },
    "564": {
      "op": "global CurrentApplicationID",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "registryApp#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "to_encode%0#0"
      ]
    },
    "566": {
      "op": "itob",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "registryApp#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "val_as_bytes%6#0"
      ]
    },
    "567": {
      "op": "intc_0 // 0",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "val_as_bytes%6#0",
        "0"
      ]
    },
    "568": {
      "op": "bytec_1 // \"token_id\"",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "val_as_bytes%6#0",
        "0",
        "\"token_id\""
      ]
    },
    "569": {
      "op": "app_global_get_ex",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_exists%3#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "registryApp#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "val_as_bytes%6#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "570": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "val_as_bytes%6#0",
        "maybe_value%3#0"
      ]
    },
    "571": {
      "op": "btoi",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "registryApp#0",
        "to_encode%1#0",
        "val_as_bytes%6#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "val_as_bytes%6#0",
        "to_encode%1#0"
      ]
    },
    "572": {
      "op": "itob",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "registryApp#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0"
      ]
    },
    "573": {
      "op": "intc_0 // 0",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "0"
      ]
    },
    "574": {
      "op": "bytec_2 // \"start_ts\"",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "0",
        "\"start_ts\""
      ]
    },
    "575": {
      "op": "app_global_get_ex",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_exists%4#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%4#0",
        "registryApp#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "576": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "maybe_value%4#0"
      ]
    },
    "577": {
      "op": "btoi",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "registryApp#0",
        "to_encode%2#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "to_encode%2#0"
      ]
    },
    "578": {
      "op": "itob",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "registryApp#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0"
      ]
    },
    "579": {
      "op": "intc_0 // 0",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "0"
      ]
    },
    "580": {
      "op": "bytec_3 // \"period_secs\"",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "0",
        "\"period_secs\""
      ]
    },
    "581": {
      "op": "app_global_get_ex",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_exists%5#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%5#0",
        "registryApp#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "582": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "maybe_value%5#0"
      ]
    },
    "583": {
      "op": "btoi",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "registryApp#0",
        "to_encode%3#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "to_encode%3#0"
      ]
    },
    "584": {
      "op": "itob",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "registryApp#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ]
    },
    "585": {
      "op": "intc_0 // 0",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "0"
      ]
    },
    "586": {
      "op": "bytec 4 // \"payout_amount\"",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "0",
        "\"payout_amount\""
      ]
    },
    "588": {
      "op": "app_global_get_ex",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_exists%6#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%6#0",
        "registryApp#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "589": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "maybe_value%6#0"
      ]
    },
    "590": {
      "op": "btoi",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "registryApp#0",
        "to_encode%4#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "to_encode%4#0"
      ]
    },
    "591": {
      "op": "itob",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "registryApp#0",
        "val_as_bytes%10#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0"
      ]
    },
    "592": {
      "op": "intc_0 // 0",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "0"
      ]
    },
    "593": {
      "op": "bytec 5 // \"max_periods\"",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "0",
        "\"max_periods\""
      ]
    },
    "595": {
      "op": "app_global_get_ex",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_exists%7#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%7#0",
        "registryApp#0",
        "val_as_bytes%10#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "maybe_value%7#0",
        "maybe_exists%7#0"
      ]
    },
    "596": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "maybe_value%7#0"
      ]
    },
    "597": {
      "op": "btoi",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "registryApp#0",
        "to_encode%5#0",
        "val_as_bytes%10#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "to_encode%5#0"
      ]
    },
    "598": {
      "op": "itob",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "registryApp#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0"
      ]
    },
    "599": {
      "op": "intc_0 // 0",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "0"
      ]
    },
    "600": {
      "op": "bytec 6 // \"deposit_amount\"",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "0",
        "\"deposit_amount\""
      ]
    },
    "602": {
      "op": "app_global_get_ex",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_exists%8#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "maybe_value%8#0",
        "registryApp#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "maybe_value%8#0",
        "maybe_exists%8#0"
      ]
    },
    "603": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "maybe_value%8#0"
      ]
    },
    "604": {
      "op": "btoi",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "registryApp#0",
        "to_encode%6#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "to_encode%6#0"
      ]
    },
    "605": {
      "op": "itob",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "registryApp#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0"
      ]
    },
    "606": {
      "op": "pushbytes 0xf7199eeb // method \"registerRoute(uint64,uint64,account,account,uint64,uint64,uint64,uint64,uint64)void\"",
      "defined_out": [
        "Method(registerRoute(uint64,uint64,account,account,uint64,uint64,uint64,uint64,uint64)void)",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "registryApp#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "Method(registerRoute(uint64,uint64,account,account,uint64,uint64,uint64,uint64,uint64)void)"
      ]
    },
    "612": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "val_as_bytes%6#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0"
      ]
    },
    "614": {
      "op": "uncover 6",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%6#0"
      ]
    },
    "616": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "val_as_bytes%7#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0"
      ]
    },
    "618": {
      "op": "uncover 5",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%7#0"
      ]
    },
    "620": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0"
      ]
    },
    "622": {
      "op": "pushbytes 0x01",
      "defined_out": [
        "0x01",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "registryApp#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "0x01"
      ]
    },
    "625": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0"
      ]
    },
    "627": {
      "op": "pushbytes 0x02",
      "defined_out": [
        "0x02",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "registryApp#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "0x02"
      ]
    },
    "630": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "val_as_bytes%8#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0"
      ]
    },
    "632": {
      "op": "uncover 4",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%8#0"
      ]
    },
    "634": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "val_as_bytes%9#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0"
      ]
    },
    "636": {
      "op": "uncover 3",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%9#0"
      ]
    },
    "638": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "val_as_bytes%10#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0"
      ]
    },
    "640": {
      "op": "uncover 2",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0",
        "val_as_bytes%10#0"
      ]
    },
    "642": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "val_as_bytes%11#0",
        "val_as_bytes%12#0"
      ]
    },
    "644": {
      "op": "swap",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "val_as_bytes%12#0",
        "val_as_bytes%11#0"
      ]
    },
    "645": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0",
        "val_as_bytes%12#0"
      ]
    },
    "647": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%1#0",
        "maybe_value%2#0"
      ]
    },
    "649": {
      "op": "swap",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%2#0",
        "maybe_value%1#0"
      ]
    },
    "650": {
      "op": "itxn_field Accounts",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "maybe_value%2#0"
      ]
    },
    "652": {
      "op": "itxn_field Accounts",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "654": {
      "op": "dig 1",
      "defined_out": [
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "registryApp#0",
        "registryApp#0 (copy)"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "registryApp#0 (copy)"
      ]
    },
    "656": {
      "op": "itxn_field Applications",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "658": {
      "op": "itxn_field Sender",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0"
      ]
    },
    "660": {
      "op": "dup",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "registryApp#0 (copy)"
      ]
    },
    "661": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0"
      ]
    },
    "663": {
      "op": "pushint 6 // appl",
      "defined_out": [
        "appl",
        "registryApp#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "appl"
      ]
    },
    "665": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0"
      ]
    },
    "667": {
      "op": "pushint 20000 // 20000",
      "defined_out": [
        "20000",
        "registryApp#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "20000"
      ]
    },
    "671": {
      "op": "itxn_field Fee",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0"
      ]
    },
    "673": {
      "op": "itxn_submit"
    },
    "674": {
      "op": "itxn_begin"
    },
    "675": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "registryApp#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%1%%param_Sender_idx_0#0"
      ]
    },
    "677": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "registryApp#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "tmp%5#0"
      ]
    },
    "679": {
      "op": "pushbytes 0x8de40c28 // method \"getParams()(uint64,address,uint64,uint64)\"",
      "defined_out": [
        "Method(getParams()(uint64,address,uint64,uint64))",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "registryApp#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "tmp%5#0",
        "Method(getParams()(uint64,address,uint64,uint64))"
      ]
    },
    "685": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "tmp%5#0"
      ]
    },
    "687": {
      "op": "itxn_field Accounts",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%1%%param_Sender_idx_0#0"
      ]
    },
    "689": {
      "op": "frame_dig -8",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "beneficiary#0 (copy)"
      ]
    },
    "691": {
      "op": "itxn_field Accounts",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%1%%param_Sender_idx_0#0"
      ]
    },
    "693": {
      "op": "dig 1",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%1%%param_Sender_idx_0#0",
        "registryApp#0 (copy)"
      ]
    },
    "695": {
      "op": "itxn_field Applications",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0",
        "inner_txn_params%1%%param_Sender_idx_0#0"
      ]
    },
    "697": {
      "op": "itxn_field Sender",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "registryApp#0"
      ]
    },
    "699": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3"
      ]
    },
    "701": {
      "op": "pushint 6 // appl",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "appl"
      ]
    },
    "703": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3"
      ]
    },
    "705": {
      "op": "intc_3 // 1000",
      "defined_out": [
        "1000"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "1000"
      ]
    },
    "706": {
      "op": "itxn_field Fee",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3"
      ]
    },
    "708": {
      "op": "itxn_submit"
    },
    "709": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%0#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "awst_tmp%0#0"
      ]
    },
    "711": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "712": {
      "op": "extract 0 4",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "awst_tmp%0#0",
        "tmp%7#0"
      ]
    },
    "715": {
      "op": "bytec 12 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "awst_tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "awst_tmp%0#0",
        "tmp%7#0",
        "0x151f7c75"
      ]
    },
    "717": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "awst_tmp%0#0",
        "tmp%8#0"
      ]
    },
    "718": {
      "error": "Bytes has valid prefix",
      "op": "assert // Bytes has valid prefix",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "awst_tmp%0#0"
      ]
    },
    "719": {
      "op": "dup",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "720": {
      "op": "extract 4 8",
      "defined_out": [
        "awst_tmp%0#0",
        "new_state_value%1#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "awst_tmp%0#0",
        "new_state_value%1#0"
      ]
    },
    "723": {
      "op": "bytec 13 // \"fee_bps\"",
      "defined_out": [
        "\"fee_bps\"",
        "awst_tmp%0#0",
        "new_state_value%1#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "awst_tmp%0#0",
        "new_state_value%1#0",
        "\"fee_bps\""
      ]
    },
    "725": {
      "op": "swap",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "awst_tmp%0#0",
        "\"fee_bps\"",
        "new_state_value%1#0"
      ]
    },
    "726": {
      "op": "app_global_put",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "awst_tmp%0#0"
      ]
    },
    "727": {
      "op": "dup",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "728": {
      "op": "extract 12 32",
      "defined_out": [
        "awst_tmp%0#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "awst_tmp%0#0",
        "tmp%9#0"
      ]
    },
    "731": {
      "op": "bytec 14 // \"treasury\"",
      "defined_out": [
        "\"treasury\"",
        "awst_tmp%0#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "awst_tmp%0#0",
        "tmp%9#0",
        "\"treasury\""
      ]
    },
    "733": {
      "op": "swap",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "awst_tmp%0#0",
        "\"treasury\"",
        "tmp%9#0"
      ]
    },
    "734": {
      "op": "app_global_put",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "awst_tmp%0#0"
      ]
    },
    "735": {
      "op": "dup",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "736": {
      "op": "pushint 44 // 44",
      "defined_out": [
        "44",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)",
        "44"
      ]
    },
    "738": {
      "op": "extract_uint64",
      "defined_out": [
        "awst_tmp%0#0",
        "new_state_value%2#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "awst_tmp%0#0",
        "new_state_value%2#0"
      ]
    },
    "739": {
      "op": "bytec 9 // \"flux_oracle_app\"",
      "defined_out": [
        "\"flux_oracle_app\"",
        "awst_tmp%0#0",
        "new_state_value%2#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "awst_tmp%0#0",
        "new_state_value%2#0",
        "\"flux_oracle_app\""
      ]
    },
    "741": {
      "op": "swap",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "awst_tmp%0#0",
        "\"flux_oracle_app\"",
        "new_state_value%2#0"
      ]
    },
    "742": {
      "op": "app_global_put",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "awst_tmp%0#0"
      ]
    },
    "743": {
      "op": "extract 52 8",
      "defined_out": [
        "new_state_value%3#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "new_state_value%3#0"
      ]
    },
    "746": {
      "op": "bytec 15 // \"nominated_asset_id\"",
      "defined_out": [
        "\"nominated_asset_id\"",
        "new_state_value%3#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "new_state_value%3#0",
        "\"nominated_asset_id\""
      ]
    },
    "748": {
      "op": "swap",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "\"nominated_asset_id\"",
        "new_state_value%3#0"
      ]
    },
    "749": {
      "op": "app_global_put",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3"
      ]
    },
    "750": {
      "op": "bytec_0 // 0x0000000000000000"
    },
    "751": {
      "op": "intc_0 // 0"
    },
    "752": {
      "op": "bytec 9 // \"flux_oracle_app\"",
      "defined_out": [
        "\"flux_oracle_app\"",
        "0",
        "userTier#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "0",
        "\"flux_oracle_app\""
      ]
    },
    "754": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%9#0",
        "maybe_value%9#0",
        "userTier#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "maybe_value%9#0",
        "maybe_exists%9#0"
      ]
    },
    "755": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "maybe_value%9#0"
      ]
    },
    "756": {
      "op": "bz createRoute_after_if_else@5",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0"
      ]
    },
    "759": {
      "op": "itxn_begin"
    },
    "760": {
      "op": "intc_0 // 0",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "0"
      ]
    },
    "761": {
      "op": "bytec 9 // \"flux_oracle_app\"",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "0",
        "\"flux_oracle_app\""
      ]
    },
    "763": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%10#0",
        "maybe_value%10#0",
        "userTier#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "maybe_value%10#0",
        "maybe_exists%10#0"
      ]
    },
    "764": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "maybe_value%10#0"
      ]
    },
    "765": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%2%%param_Sender_idx_0#0",
        "maybe_value%10#0",
        "userTier#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "maybe_value%10#0",
        "inner_txn_params%2%%param_Sender_idx_0#0"
      ]
    },
    "767": {
      "op": "intc_0 // 0",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "maybe_value%10#0",
        "inner_txn_params%2%%param_Sender_idx_0#0",
        "0"
      ]
    },
    "768": {
      "op": "bytec 9 // \"flux_oracle_app\"",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "maybe_value%10#0",
        "inner_txn_params%2%%param_Sender_idx_0#0",
        "0",
        "\"flux_oracle_app\""
      ]
    },
    "770": {
      "op": "app_global_get_ex",
      "defined_out": [
        "inner_txn_params%2%%param_Sender_idx_0#0",
        "maybe_exists%11#0",
        "maybe_value%10#0",
        "maybe_value%11#0",
        "userTier#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "maybe_value%10#0",
        "inner_txn_params%2%%param_Sender_idx_0#0",
        "maybe_value%11#0",
        "maybe_exists%11#0"
      ]
    },
    "771": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "maybe_value%10#0",
        "inner_txn_params%2%%param_Sender_idx_0#0",
        "maybe_value%11#0"
      ]
    },
    "772": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%2%%param_Sender_idx_0#0",
        "maybe_value%10#0",
        "maybe_value%11#0",
        "tmp%12#0",
        "userTier#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "maybe_value%10#0",
        "inner_txn_params%2%%param_Sender_idx_0#0",
        "maybe_value%11#0",
        "tmp%12#0"
      ]
    },
    "774": {
      "op": "dup",
      "defined_out": [
        "inner_txn_params%2%%param_Sender_idx_0#0",
        "maybe_value%10#0",
        "maybe_value%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "userTier#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "maybe_value%10#0",
        "inner_txn_params%2%%param_Sender_idx_0#0",
        "maybe_value%11#0",
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "775": {
      "op": "pushbytes 0xd4d7aa5c // method \"getUserTier(address)uint64\"",
      "defined_out": [
        "Method(getUserTier(address)uint64)",
        "inner_txn_params%2%%param_Sender_idx_0#0",
        "maybe_value%10#0",
        "maybe_value%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "userTier#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "maybe_value%10#0",
        "inner_txn_params%2%%param_Sender_idx_0#0",
        "maybe_value%11#0",
        "tmp%12#0",
        "tmp%13#0",
        "Method(getUserTier(address)uint64)"
      ]
    },
    "781": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "maybe_value%10#0",
        "inner_txn_params%2%%param_Sender_idx_0#0",
        "maybe_value%11#0",
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "783": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "maybe_value%10#0",
        "inner_txn_params%2%%param_Sender_idx_0#0",
        "maybe_value%11#0",
        "tmp%12#0"
      ]
    },
    "785": {
      "op": "itxn_field Accounts",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "maybe_value%10#0",
        "inner_txn_params%2%%param_Sender_idx_0#0",
        "maybe_value%11#0"
      ]
    },
    "787": {
      "op": "itxn_field Applications",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "maybe_value%10#0",
        "inner_txn_params%2%%param_Sender_idx_0#0"
      ]
    },
    "789": {
      "op": "itxn_field Sender",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "maybe_value%10#0"
      ]
    },
    "791": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0"
      ]
    },
    "793": {
      "op": "pushint 6 // appl",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "appl"
      ]
    },
    "795": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0"
      ]
    },
    "797": {
      "op": "intc_3 // 1000",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "1000"
      ]
    },
    "798": {
      "op": "itxn_field Fee",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0"
      ]
    },
    "800": {
      "op": "itxn_submit"
    },
    "801": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%1#0",
        "userTier#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "awst_tmp%1#0"
      ]
    },
    "803": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)",
        "userTier#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "awst_tmp%1#0",
        "awst_tmp%1#0 (copy)"
      ]
    },
    "804": {
      "op": "extract 4 0",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "awst_tmp%1#0",
        "userTier#0"
      ]
    },
    "807": {
      "op": "frame_bury 4",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "awst_tmp%1#0"
      ]
    },
    "809": {
      "op": "extract 0 4",
      "defined_out": [
        "tmp%15#0",
        "userTier#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "tmp%15#0"
      ]
    },
    "812": {
      "op": "bytec 12 // 0x151f7c75",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "tmp%15#0",
        "0x151f7c75"
      ]
    },
    "814": {
      "op": "==",
      "defined_out": [
        "tmp%16#0",
        "userTier#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "tmp%16#0"
      ]
    },
    "815": {
      "error": "Bytes has valid prefix",
      "op": "assert // Bytes has valid prefix",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0"
      ]
    },
    "816": {
      "block": "createRoute_after_if_else@5",
      "stack_in": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "userTier#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "userTier#0"
      ]
    },
    "818": {
      "op": "btoi",
      "defined_out": [
        "userTier#0",
        "userTier#3"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "userTier#3"
      ]
    },
    "819": {
      "op": "frame_bury 3",
      "defined_out": [
        "userTier#0",
        "userTier#3"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0"
      ]
    },
    "821": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "userTier#0",
        "userTier#3"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "0"
      ]
    },
    "822": {
      "op": "bytec 13 // \"fee_bps\"",
      "defined_out": [
        "\"fee_bps\"",
        "0",
        "userTier#0",
        "userTier#3"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "0",
        "\"fee_bps\""
      ]
    },
    "824": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "userTier#0",
        "userTier#3"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "825": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "maybe_value%0#0"
      ]
    },
    "826": {
      "op": "btoi",
      "defined_out": [
        "initialFee#0",
        "userTier#0",
        "userTier#3"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "initialFee#0"
      ]
    },
    "827": {
      "op": "frame_bury 2",
      "defined_out": [
        "initialFee#0",
        "userTier#0",
        "userTier#3"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0"
      ]
    },
    "829": {
      "op": "intc_0 // 0",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "0"
      ]
    },
    "830": {
      "op": "bytec 15 // \"nominated_asset_id\"",
      "defined_out": [
        "\"nominated_asset_id\"",
        "0",
        "initialFee#0",
        "userTier#0",
        "userTier#3"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "0",
        "\"nominated_asset_id\""
      ]
    },
    "832": {
      "op": "app_global_get_ex",
      "defined_out": [
        "initialFee#0",
        "maybe_exists%1#0",
        "maybe_value%1#1",
        "userTier#0",
        "userTier#3"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "maybe_value%1#1",
        "maybe_exists%1#0"
      ]
    },
    "833": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "maybe_value%1#1"
      ]
    },
    "834": {
      "op": "btoi",
      "defined_out": [
        "initialFee#0",
        "tmp%0#1",
        "userTier#0",
        "userTier#3"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "tmp%0#1"
      ]
    },
    "835": {
      "op": "frame_dig -2",
      "defined_out": [
        "initialFee#0",
        "tmp%0#1",
        "tokenId#0 (copy)",
        "userTier#0",
        "userTier#3"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "tmp%0#1",
        "tokenId#0 (copy)"
      ]
    },
    "837": {
      "op": "==",
      "defined_out": [
        "initialFee#0",
        "tmp%1#1",
        "userTier#0",
        "userTier#3"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "tmp%1#1"
      ]
    },
    "838": {
      "op": "bz createRoute_else_body@27",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0"
      ]
    },
    "841": {
      "op": "frame_dig 3",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "userTier#3"
      ]
    },
    "843": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "initialFee#0",
        "userTier#0",
        "userTier#3"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "userTier#3",
        "1"
      ]
    },
    "844": {
      "op": "==",
      "defined_out": [
        "initialFee#0",
        "tmp%2#1",
        "userTier#0",
        "userTier#3"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "tmp%2#1"
      ]
    },
    "845": {
      "op": "bz createRoute_else_body@17",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0"
      ]
    },
    "848": {
      "op": "pushint 20 // 20",
      "defined_out": [
        "effectiveFeeBps#1",
        "initialFee#0",
        "userTier#0",
        "userTier#3"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "effectiveFeeBps#1"
      ]
    },
    "850": {
      "op": "frame_bury 0",
      "defined_out": [
        "effectiveFeeBps#1",
        "initialFee#0",
        "userTier#0",
        "userTier#3"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0"
      ]
    },
    "852": {
      "block": "createRoute_after_if_else@39",
      "stack_in": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "depositAmount#0 (copy)"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "depositAmount#0 (copy)"
      ]
    },
    "854": {
      "op": "frame_dig 0",
      "defined_out": [
        "depositAmount#0 (copy)",
        "effectiveFeeBps#1"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "depositAmount#0 (copy)",
        "effectiveFeeBps#1"
      ]
    },
    "856": {
      "op": "mulw",
      "defined_out": [
        "effectiveFeeBps#1",
        "feeHi#0",
        "feeLo#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "feeHi#0",
        "feeLo#0"
      ]
    },
    "857": {
      "op": "pushint 10000 // 10000",
      "defined_out": [
        "10000",
        "effectiveFeeBps#1",
        "feeHi#0",
        "feeLo#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "feeHi#0",
        "feeLo#0",
        "10000"
      ]
    },
    "860": {
      "op": "divw",
      "defined_out": [
        "effectiveFeeBps#1",
        "fee#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "fee#0"
      ]
    },
    "861": {
      "op": "dup",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "fee#0",
        "fee#0"
      ]
    },
    "862": {
      "op": "frame_bury 1",
      "defined_out": [
        "effectiveFeeBps#1",
        "fee#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "fee#0"
      ]
    },
    "864": {
      "op": "bz createRoute_after_if_else@13",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0"
      ]
    },
    "867": {
      "op": "frame_dig -1",
      "defined_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "tokenTransfer#0 (copy)"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "tokenTransfer#0 (copy)"
      ]
    },
    "869": {
      "op": "gtxns XferAsset",
      "defined_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "tmp%19#0"
      ]
    },
    "871": {
      "op": "frame_dig -2",
      "defined_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "tmp%19#0",
        "tokenId#0 (copy)"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "tmp%19#0",
        "tokenId#0 (copy)"
      ]
    },
    "873": {
      "op": "==",
      "defined_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "tmp%20#0"
      ]
    },
    "874": {
      "op": "bz createRoute_bool_false@10",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0"
      ]
    },
    "877": {
      "op": "frame_dig -1",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "tokenTransfer#0 (copy)"
      ]
    },
    "879": {
      "op": "gtxns AssetAmount",
      "defined_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "tmp%21#0"
      ]
    },
    "881": {
      "op": "frame_dig -3",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "tmp%21#0",
        "depositAmount#0 (copy)"
      ]
    },
    "883": {
      "op": "frame_dig 1",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "tmp%21#0",
        "depositAmount#0 (copy)",
        "fee#0"
      ]
    },
    "885": {
      "op": "+",
      "defined_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "tmp%21#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "tmp%21#0",
        "tmp%22#0"
      ]
    },
    "886": {
      "op": "==",
      "defined_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "tmp%23#0"
      ]
    },
    "887": {
      "op": "bz createRoute_bool_false@10",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0"
      ]
    },
    "890": {
      "op": "frame_dig -1",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "tokenTransfer#0 (copy)"
      ]
    },
    "892": {
      "op": "gtxns AssetReceiver",
      "defined_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "tmp%24#0"
      ]
    },
    "894": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "tmp%24#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "tmp%24#0",
        "tmp%25#0"
      ]
    },
    "896": {
      "op": "==",
      "defined_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "tmp%26#0"
      ]
    },
    "897": {
      "op": "bz createRoute_bool_false@10",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0"
      ]
    },
    "900": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0",
        "effectiveFeeBps#1",
        "fee#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "and_result%0#0"
      ]
    },
    "901": {
      "block": "createRoute_bool_merge@11",
      "stack_in": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "and_result%0#0"
      ],
      "error": "assert target is match for conditions",
      "op": "assert // assert target is match for conditions",
      "defined_out": [],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0"
      ]
    },
    "902": {
      "op": "itxn_begin"
    },
    "903": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "0"
      ]
    },
    "904": {
      "op": "bytec 14 // \"treasury\"",
      "defined_out": [
        "\"treasury\"",
        "0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "0",
        "\"treasury\""
      ]
    },
    "906": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%12#0",
        "maybe_value%12#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "maybe_value%12#0",
        "maybe_exists%12#0"
      ]
    },
    "907": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "maybe_value%12#0"
      ]
    },
    "908": {
      "op": "frame_dig -2",
      "defined_out": [
        "maybe_value%12#0",
        "tokenId#0 (copy)"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "maybe_value%12#0",
        "tokenId#0 (copy)"
      ]
    },
    "910": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "maybe_value%12#0"
      ]
    },
    "912": {
      "op": "frame_dig 1",
      "defined_out": [
        "fee#0",
        "maybe_value%12#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "maybe_value%12#0",
        "fee#0"
      ]
    },
    "914": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "maybe_value%12#0"
      ]
    },
    "916": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0"
      ]
    },
    "918": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4",
        "fee#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "4"
      ]
    },
    "919": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0"
      ]
    },
    "921": {
      "op": "intc_3 // 1000",
      "defined_out": [
        "1000",
        "fee#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "1000"
      ]
    },
    "922": {
      "op": "itxn_field Fee",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0"
      ]
    },
    "924": {
      "op": "itxn_submit"
    },
    "925": {
      "block": "createRoute_after_if_else@13",
      "stack_in": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0"
      ],
      "retsub": true,
      "op": "retsub"
    },
    "926": {
      "block": "createRoute_bool_false@10",
      "stack_in": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "and_result%0#0"
      ]
    },
    "927": {
      "op": "b createRoute_bool_merge@11"
    },
    "930": {
      "block": "createRoute_else_body@17",
      "stack_in": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "userTier#3"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "userTier#3"
      ]
    },
    "932": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "userTier#3"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "userTier#3",
        "2"
      ]
    },
    "934": {
      "op": "==",
      "defined_out": [
        "tmp%3#1",
        "userTier#3"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "tmp%3#1"
      ]
    },
    "935": {
      "op": "bz createRoute_else_body@19",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0"
      ]
    },
    "938": {
      "op": "pushint 15 // 15",
      "defined_out": [
        "effectiveFeeBps#1",
        "userTier#3"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "effectiveFeeBps#1"
      ]
    },
    "940": {
      "op": "frame_bury 0",
      "defined_out": [
        "effectiveFeeBps#1",
        "userTier#3"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0"
      ]
    },
    "942": {
      "op": "b createRoute_after_if_else@39"
    },
    "945": {
      "block": "createRoute_else_body@19",
      "stack_in": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "userTier#3"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "userTier#3"
      ]
    },
    "947": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "userTier#3"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "userTier#3",
        "3"
      ]
    },
    "949": {
      "op": "==",
      "defined_out": [
        "tmp%4#1",
        "userTier#3"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "tmp%4#1"
      ]
    },
    "950": {
      "op": "bz createRoute_else_body@21",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0"
      ]
    },
    "953": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "effectiveFeeBps#1",
        "userTier#3"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "effectiveFeeBps#1"
      ]
    },
    "955": {
      "op": "frame_bury 0",
      "defined_out": [
        "effectiveFeeBps#1",
        "userTier#3"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0"
      ]
    },
    "957": {
      "op": "b createRoute_after_if_else@39"
    },
    "960": {
      "block": "createRoute_else_body@21",
      "stack_in": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "userTier#3"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "userTier#3"
      ]
    },
    "962": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4",
        "userTier#3"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "userTier#3",
        "4"
      ]
    },
    "963": {
      "op": ">=",
      "defined_out": [
        "tmp%5#1",
        "userTier#3"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "tmp%5#1"
      ]
    },
    "964": {
      "op": "frame_dig 2",
      "defined_out": [
        "effectiveFeeBps#1",
        "tmp%5#1",
        "userTier#3"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "tmp%5#1",
        "effectiveFeeBps#1"
      ]
    },
    "966": {
      "op": "frame_bury 0",
      "defined_out": [
        "effectiveFeeBps#1",
        "tmp%5#1",
        "userTier#3"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "tmp%5#1"
      ]
    },
    "968": {
      "op": "bz createRoute_after_if_else@39",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0"
      ]
    },
    "971": {
      "op": "pushint 10 // 10",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "effectiveFeeBps#1"
      ]
    },
    "973": {
      "op": "frame_bury 0",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0"
      ]
    },
    "975": {
      "op": "b createRoute_after_if_else@39"
    },
    "978": {
      "block": "createRoute_else_body@27",
      "stack_in": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "userTier#3"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "userTier#3"
      ]
    },
    "980": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "userTier#3"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "userTier#3",
        "1"
      ]
    },
    "981": {
      "op": "==",
      "defined_out": [
        "tmp%6#1",
        "userTier#3"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "tmp%6#1"
      ]
    },
    "982": {
      "op": "bz createRoute_else_body@29",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0"
      ]
    },
    "985": {
      "op": "pushint 45 // 45",
      "defined_out": [
        "effectiveFeeBps#1",
        "userTier#3"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "effectiveFeeBps#1"
      ]
    },
    "987": {
      "op": "frame_bury 0",
      "defined_out": [
        "effectiveFeeBps#1",
        "userTier#3"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0"
      ]
    },
    "989": {
      "op": "b createRoute_after_if_else@39"
    },
    "992": {
      "block": "createRoute_else_body@29",
      "stack_in": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "userTier#3"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "userTier#3"
      ]
    },
    "994": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "userTier#3"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "userTier#3",
        "2"
      ]
    },
    "996": {
      "op": "==",
      "defined_out": [
        "tmp%7#1",
        "userTier#3"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "tmp%7#1"
      ]
    },
    "997": {
      "op": "bz createRoute_else_body@31",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0"
      ]
    },
    "1000": {
      "op": "pushint 38 // 38",
      "defined_out": [
        "effectiveFeeBps#1",
        "userTier#3"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "effectiveFeeBps#1"
      ]
    },
    "1002": {
      "op": "frame_bury 0",
      "defined_out": [
        "effectiveFeeBps#1",
        "userTier#3"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0"
      ]
    },
    "1004": {
      "op": "b createRoute_after_if_else@39"
    },
    "1007": {
      "block": "createRoute_else_body@31",
      "stack_in": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "userTier#3"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "userTier#3"
      ]
    },
    "1009": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "userTier#3"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "userTier#3",
        "3"
      ]
    },
    "1011": {
      "op": "==",
      "defined_out": [
        "tmp%8#0",
        "userTier#3"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "tmp%8#0"
      ]
    },
    "1012": {
      "op": "bz createRoute_else_body@33",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0"
      ]
    },
    "1015": {
      "op": "pushint 30 // 30",
      "defined_out": [
        "effectiveFeeBps#1",
        "userTier#3"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "effectiveFeeBps#1"
      ]
    },
    "1017": {
      "op": "frame_bury 0",
      "defined_out": [
        "effectiveFeeBps#1",
        "userTier#3"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0"
      ]
    },
    "1019": {
      "op": "b createRoute_after_if_else@39"
    },
    "1022": {
      "block": "createRoute_else_body@33",
      "stack_in": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "userTier#3"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "userTier#3"
      ]
    },
    "1024": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4",
        "userTier#3"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "userTier#3",
        "4"
      ]
    },
    "1025": {
      "op": ">=",
      "defined_out": [
        "tmp%9#1",
        "userTier#3"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "tmp%9#1"
      ]
    },
    "1026": {
      "op": "frame_dig 2",
      "defined_out": [
        "effectiveFeeBps#1",
        "tmp%9#1",
        "userTier#3"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "tmp%9#1",
        "effectiveFeeBps#1"
      ]
    },
    "1028": {
      "op": "frame_bury 0",
      "defined_out": [
        "effectiveFeeBps#1",
        "tmp%9#1",
        "userTier#3"
      ],
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "tmp%9#1"
      ]
    },
    "1030": {
      "op": "bz createRoute_after_if_else@39",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0"
      ]
    },
    "1033": {
      "op": "pushint 20 // 20",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0",
        "effectiveFeeBps#1"
      ]
    },
    "1035": {
      "op": "frame_bury 0",
      "stack_out": [
        "effectiveFeeBps#1",
        "fee#0",
        "initialFee#0",
        "userTier#3",
        "userTier#0"
      ]
    },
    "1037": {
      "op": "b createRoute_after_if_else@39"
    },
    "1040": {
      "subroutine": "smart_contracts/waypoint_linear/waypoint-linear.algo.ts::WaypointLinear.claim",
      "params": {},
      "block": "claim",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "1043": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "alreadyClaimed#0"
      ]
    },
    "1045": {
      "op": "dupn 3",
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0"
      ]
    },
    "1047": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tmp%0#0"
      ]
    },
    "1049": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tmp%0#0",
        "0"
      ]
    },
    "1050": {
      "op": "bytec 8 // \"beneficiary\"",
      "defined_out": [
        "\"beneficiary\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tmp%0#0",
        "0",
        "\"beneficiary\""
      ]
    },
    "1052": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1053": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "1054": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tmp%1#0"
      ]
    },
    "1055": {
      "error": "Only beneficiary can claim",
      "op": "assert // Only beneficiary can claim",
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0"
      ]
    },
    "1056": {
      "op": "intc_0 // 0",
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "0"
      ]
    },
    "1057": {
      "op": "bytec_1 // \"token_id\"",
      "defined_out": [
        "\"token_id\"",
        "0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "0",
        "\"token_id\""
      ]
    },
    "1058": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1059": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "maybe_value%1#0"
      ]
    },
    "1060": {
      "op": "btoi",
      "defined_out": [
        "tokenId#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0"
      ]
    },
    "1061": {
      "op": "dup",
      "defined_out": [
        "tokenId#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "tokenId#0"
      ]
    },
    "1062": {
      "error": "Route not initialized",
      "op": "assert // Route not initialized",
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0"
      ]
    },
    "1063": {
      "op": "global LatestTimestamp"
    },
    "1065": {
      "op": "dup"
    },
    "1066": {
      "op": "intc_0 // 0"
    },
    "1067": {
      "op": "bytec_2 // \"start_ts\"",
      "defined_out": [
        "\"start_ts\"",
        "0",
        "now#0",
        "tokenId#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "now#0",
        "0",
        "\"start_ts\""
      ]
    },
    "1068": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#1",
        "now#0",
        "tokenId#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "now#0",
        "maybe_value%0#1",
        "maybe_exists%0#0"
      ]
    },
    "1069": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "now#0",
        "maybe_value%0#1"
      ]
    },
    "1070": {
      "op": "btoi",
      "defined_out": [
        "now#0",
        "startTs#0",
        "tokenId#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "now#0",
        "startTs#0"
      ]
    },
    "1071": {
      "op": "dup",
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "now#0",
        "startTs#0",
        "startTs#0"
      ]
    },
    "1072": {
      "op": "cover 2",
      "defined_out": [
        "now#0",
        "startTs#0",
        "tokenId#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "now#0",
        "startTs#0"
      ]
    },
    "1074": {
      "op": "<=",
      "defined_out": [
        "now#0",
        "startTs#0",
        "tmp%0#1",
        "tokenId#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "tmp%0#1"
      ]
    },
    "1075": {
      "op": "bz claim_after_if_else@8",
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0"
      ]
    },
    "1078": {
      "op": "intc_0 // 0",
      "defined_out": [
        "now#0",
        "startTs#0",
        "tokenId#0",
        "vested#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "vested#0"
      ]
    },
    "1079": {
      "op": "frame_bury 3",
      "defined_out": [
        "now#0",
        "startTs#0",
        "tokenId#0",
        "vested#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0"
      ]
    },
    "1081": {
      "block": "claim_after_inlined_smart_contracts/waypoint_linear/waypoint-linear.algo.ts::WaypointLinear.vestedBySchedule@13",
      "stack_in": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "0"
      ]
    },
    "1082": {
      "op": "bytec 7 // \"claimed_amount\"",
      "defined_out": [
        "\"claimed_amount\"",
        "0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "0",
        "\"claimed_amount\""
      ]
    },
    "1084": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#1"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "maybe_value%0#1",
        "maybe_exists%0#0"
      ]
    },
    "1085": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "maybe_value%0#1"
      ]
    },
    "1086": {
      "op": "btoi",
      "defined_out": [
        "alreadyClaimed#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "alreadyClaimed#0"
      ]
    },
    "1087": {
      "op": "dup",
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "alreadyClaimed#0",
        "alreadyClaimed#0"
      ]
    },
    "1088": {
      "op": "frame_bury 0",
      "defined_out": [
        "alreadyClaimed#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "alreadyClaimed#0"
      ]
    },
    "1090": {
      "op": "frame_dig 3",
      "defined_out": [
        "alreadyClaimed#0",
        "vested#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "alreadyClaimed#0",
        "vested#0"
      ]
    },
    "1092": {
      "op": "<",
      "defined_out": [
        "alreadyClaimed#0",
        "tmp%0#1",
        "vested#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "tmp%0#1"
      ]
    },
    "1093": {
      "op": "bz claim_after_if_else@4",
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0"
      ]
    },
    "1096": {
      "op": "frame_dig 3",
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "vested#0"
      ]
    },
    "1098": {
      "op": "frame_dig 0",
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "vested#0",
        "alreadyClaimed#0"
      ]
    },
    "1100": {
      "op": "-",
      "defined_out": [
        "alreadyClaimed#0",
        "claimableAmount#0",
        "vested#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "claimableAmount#0"
      ]
    },
    "1101": {
      "block": "claim_after_inlined_smart_contracts/waypoint_linear/waypoint-linear.algo.ts::WaypointLinear.computeClaimable@5",
      "stack_in": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "claimableAmount#0"
      ],
      "op": "dup",
      "defined_out": [
        "claimableAmount#0",
        "claimableAmount#0 (copy)"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "claimableAmount#0",
        "claimableAmount#0 (copy)"
      ]
    },
    "1102": {
      "error": "Nothing claimable yet",
      "op": "assert // Nothing claimable yet",
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "claimableAmount#0"
      ]
    },
    "1103": {
      "op": "itxn_begin"
    },
    "1104": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "claimableAmount#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "claimableAmount#0",
        "0"
      ]
    },
    "1105": {
      "op": "bytec 8 // \"beneficiary\"",
      "defined_out": [
        "\"beneficiary\"",
        "0",
        "claimableAmount#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "claimableAmount#0",
        "0",
        "\"beneficiary\""
      ]
    },
    "1107": {
      "op": "app_global_get_ex",
      "defined_out": [
        "claimableAmount#0",
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "claimableAmount#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1108": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "claimableAmount#0",
        "maybe_value%2#0"
      ]
    },
    "1109": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "claimableAmount#0"
      ]
    },
    "1111": {
      "op": "dup",
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "claimableAmount#0",
        "claimableAmount#0 (copy)"
      ]
    },
    "1112": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "claimableAmount#0"
      ]
    },
    "1114": {
      "op": "frame_dig 4",
      "defined_out": [
        "claimableAmount#0",
        "tokenId#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "claimableAmount#0",
        "tokenId#0"
      ]
    },
    "1116": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "claimableAmount#0"
      ]
    },
    "1118": {
      "op": "intc_2 // 4",
      "defined_out": [
        "4",
        "claimableAmount#0",
        "tokenId#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "claimableAmount#0",
        "4"
      ]
    },
    "1119": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "claimableAmount#0"
      ]
    },
    "1121": {
      "op": "intc_3 // 1000",
      "defined_out": [
        "1000",
        "claimableAmount#0",
        "tokenId#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "claimableAmount#0",
        "1000"
      ]
    },
    "1122": {
      "op": "itxn_field Fee",
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "claimableAmount#0"
      ]
    },
    "1124": {
      "op": "itxn_submit"
    },
    "1125": {
      "op": "intc_0 // 0",
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "claimableAmount#0",
        "0"
      ]
    },
    "1126": {
      "op": "bytec 7 // \"claimed_amount\"",
      "defined_out": [
        "\"claimed_amount\"",
        "0",
        "claimableAmount#0",
        "tokenId#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "claimableAmount#0",
        "0",
        "\"claimed_amount\""
      ]
    },
    "1128": {
      "op": "app_global_get_ex",
      "defined_out": [
        "claimableAmount#0",
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "tokenId#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "claimableAmount#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "1129": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "claimableAmount#0",
        "maybe_value%3#0"
      ]
    },
    "1130": {
      "op": "btoi",
      "defined_out": [
        "claimableAmount#0",
        "tmp%4#0",
        "tokenId#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "claimableAmount#0",
        "tmp%4#0"
      ]
    },
    "1131": {
      "op": "+",
      "defined_out": [
        "tokenId#0",
        "updatedClaimed#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "updatedClaimed#0"
      ]
    },
    "1132": {
      "op": "itob",
      "defined_out": [
        "tokenId#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "val_as_bytes%0#0"
      ]
    },
    "1133": {
      "op": "bytec 7 // \"claimed_amount\"",
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "val_as_bytes%0#0",
        "\"claimed_amount\""
      ]
    },
    "1135": {
      "op": "swap",
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "\"claimed_amount\"",
        "val_as_bytes%0#0"
      ]
    },
    "1136": {
      "op": "app_global_put",
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0"
      ]
    },
    "1137": {
      "retsub": true,
      "op": "retsub"
    },
    "1138": {
      "block": "claim_after_if_else@4",
      "stack_in": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "claimableAmount#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "claimableAmount#0"
      ]
    },
    "1139": {
      "op": "b claim_after_inlined_smart_contracts/waypoint_linear/waypoint-linear.algo.ts::WaypointLinear.computeClaimable@5"
    },
    "1142": {
      "block": "claim_after_if_else@8",
      "stack_in": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "0"
      ]
    },
    "1143": {
      "op": "bytec_3 // \"period_secs\"",
      "defined_out": [
        "\"period_secs\"",
        "0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "0",
        "\"period_secs\""
      ]
    },
    "1144": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1145": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "maybe_value%1#0"
      ]
    },
    "1146": {
      "op": "btoi",
      "defined_out": [
        "periodSecs#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "periodSecs#0"
      ]
    },
    "1147": {
      "op": "dup",
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "periodSecs#0",
        "periodSecs#0"
      ]
    },
    "1148": {
      "op": "frame_bury 2",
      "defined_out": [
        "periodSecs#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "periodSecs#0"
      ]
    },
    "1150": {
      "op": "bnz claim_after_if_else@10",
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0"
      ]
    },
    "1153": {
      "op": "intc_0 // 0",
      "defined_out": [
        "periodSecs#0",
        "vested#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "vested#0"
      ]
    },
    "1154": {
      "op": "frame_bury 3",
      "defined_out": [
        "periodSecs#0",
        "vested#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0"
      ]
    },
    "1156": {
      "op": "b claim_after_inlined_smart_contracts/waypoint_linear/waypoint-linear.algo.ts::WaypointLinear.vestedBySchedule@13"
    },
    "1159": {
      "block": "claim_after_if_else@10",
      "stack_in": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "now#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "now#0"
      ]
    },
    "1161": {
      "op": "frame_dig 6",
      "defined_out": [
        "now#0",
        "startTs#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "now#0",
        "startTs#0"
      ]
    },
    "1163": {
      "op": "-",
      "defined_out": [
        "elapsed#0",
        "now#0",
        "startTs#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "elapsed#0"
      ]
    },
    "1164": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "elapsed#0",
        "now#0",
        "startTs#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "elapsed#0",
        "0"
      ]
    },
    "1165": {
      "op": "swap",
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "0",
        "elapsed#0"
      ]
    },
    "1166": {
      "op": "frame_dig 2",
      "defined_out": [
        "0",
        "elapsed#0",
        "now#0",
        "periodSecs#0",
        "startTs#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "0",
        "elapsed#0",
        "periodSecs#0"
      ]
    },
    "1168": {
      "op": "divw",
      "defined_out": [
        "now#0",
        "periodSecs#0",
        "periodsElapsed#0",
        "startTs#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "periodsElapsed#0"
      ]
    },
    "1169": {
      "op": "intc_0 // 0",
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "periodsElapsed#0",
        "0"
      ]
    },
    "1170": {
      "op": "bytec 5 // \"max_periods\"",
      "defined_out": [
        "\"max_periods\"",
        "0",
        "now#0",
        "periodSecs#0",
        "periodsElapsed#0",
        "startTs#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "periodsElapsed#0",
        "0",
        "\"max_periods\""
      ]
    },
    "1172": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#1",
        "now#0",
        "periodSecs#0",
        "periodsElapsed#0",
        "startTs#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "periodsElapsed#0",
        "maybe_value%2#1",
        "maybe_exists%2#0"
      ]
    },
    "1173": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "periodsElapsed#0",
        "maybe_value%2#1"
      ]
    },
    "1174": {
      "op": "btoi",
      "defined_out": [
        "maxPeriods#0",
        "now#0",
        "periodSecs#0",
        "periodsElapsed#0",
        "startTs#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "periodsElapsed#0",
        "maxPeriods#0"
      ]
    },
    "1175": {
      "op": "dup2",
      "defined_out": [
        "maxPeriods#0",
        "maxPeriods#0 (copy)",
        "now#0",
        "periodSecs#0",
        "periodsElapsed#0",
        "periodsElapsed#0 (copy)",
        "startTs#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "periodsElapsed#0",
        "maxPeriods#0",
        "periodsElapsed#0 (copy)",
        "maxPeriods#0 (copy)"
      ]
    },
    "1176": {
      "op": ">",
      "defined_out": [
        "maxPeriods#0",
        "now#0",
        "periodSecs#0",
        "periodsElapsed#0",
        "startTs#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "periodsElapsed#0",
        "maxPeriods#0",
        "tmp%2#1"
      ]
    },
    "1177": {
      "op": "select",
      "defined_out": [
        "cappedPeriods#0",
        "now#0",
        "periodSecs#0",
        "startTs#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "cappedPeriods#0"
      ]
    },
    "1178": {
      "op": "intc_0 // 0",
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "cappedPeriods#0",
        "0"
      ]
    },
    "1179": {
      "op": "bytec 4 // \"payout_amount\"",
      "defined_out": [
        "\"payout_amount\"",
        "0",
        "cappedPeriods#0",
        "now#0",
        "periodSecs#0",
        "startTs#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "cappedPeriods#0",
        "0",
        "\"payout_amount\""
      ]
    },
    "1181": {
      "op": "app_global_get_ex",
      "defined_out": [
        "cappedPeriods#0",
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "now#0",
        "periodSecs#0",
        "startTs#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "cappedPeriods#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "1182": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "cappedPeriods#0",
        "maybe_value%3#0"
      ]
    },
    "1183": {
      "op": "btoi",
      "defined_out": [
        "cappedPeriods#0",
        "now#0",
        "payoutAmount#0",
        "periodSecs#0",
        "startTs#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "cappedPeriods#0",
        "payoutAmount#0"
      ]
    },
    "1184": {
      "op": "intc_0 // 0",
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "cappedPeriods#0",
        "payoutAmount#0",
        "0"
      ]
    },
    "1185": {
      "op": "bytec 6 // \"deposit_amount\"",
      "defined_out": [
        "\"deposit_amount\"",
        "0",
        "cappedPeriods#0",
        "now#0",
        "payoutAmount#0",
        "periodSecs#0",
        "startTs#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "cappedPeriods#0",
        "payoutAmount#0",
        "0",
        "\"deposit_amount\""
      ]
    },
    "1187": {
      "op": "app_global_get_ex",
      "defined_out": [
        "cappedPeriods#0",
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "now#0",
        "payoutAmount#0",
        "periodSecs#0",
        "startTs#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "cappedPeriods#0",
        "payoutAmount#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "1188": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "cappedPeriods#0",
        "payoutAmount#0",
        "maybe_value%4#0"
      ]
    },
    "1189": {
      "op": "btoi",
      "defined_out": [
        "cappedPeriods#0",
        "depositAmount#0",
        "now#0",
        "payoutAmount#0",
        "periodSecs#0",
        "startTs#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "cappedPeriods#0",
        "payoutAmount#0",
        "depositAmount#0"
      ]
    },
    "1190": {
      "op": "cover 2",
      "defined_out": [
        "cappedPeriods#0",
        "depositAmount#0",
        "now#0",
        "payoutAmount#0",
        "periodSecs#0",
        "startTs#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "depositAmount#0",
        "cappedPeriods#0",
        "payoutAmount#0"
      ]
    },
    "1192": {
      "op": "mulw",
      "defined_out": [
        "candidateHi#0",
        "candidateLo#0",
        "depositAmount#0",
        "now#0",
        "periodSecs#0",
        "startTs#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "depositAmount#0",
        "candidateHi#0",
        "candidateLo#0"
      ]
    },
    "1193": {
      "op": "frame_bury 1",
      "defined_out": [
        "candidateHi#0",
        "candidateLo#0",
        "depositAmount#0",
        "now#0",
        "periodSecs#0",
        "startTs#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "depositAmount#0",
        "candidateHi#0"
      ]
    },
    "1195": {
      "op": "bz claim_after_if_else@12",
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "depositAmount#0"
      ]
    },
    "1198": {
      "op": "frame_bury 3",
      "defined_out": [
        "candidateLo#0",
        "now#0",
        "periodSecs#0",
        "startTs#0",
        "vested#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0"
      ]
    },
    "1200": {
      "op": "b claim_after_inlined_smart_contracts/waypoint_linear/waypoint-linear.algo.ts::WaypointLinear.vestedBySchedule@13"
    },
    "1203": {
      "block": "claim_after_if_else@12",
      "stack_in": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "depositAmount#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "candidateLo#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "depositAmount#0",
        "candidateLo#0"
      ]
    },
    "1205": {
      "op": "dup",
      "defined_out": [
        "candidateLo#0",
        "candidateLo#0 (copy)"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "depositAmount#0",
        "candidateLo#0",
        "candidateLo#0 (copy)"
      ]
    },
    "1206": {
      "op": "dig 2",
      "defined_out": [
        "candidateLo#0",
        "candidateLo#0 (copy)",
        "depositAmount#0",
        "depositAmount#0 (copy)"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "depositAmount#0",
        "candidateLo#0",
        "candidateLo#0 (copy)",
        "depositAmount#0 (copy)"
      ]
    },
    "1208": {
      "op": ">",
      "defined_out": [
        "candidateLo#0",
        "depositAmount#0",
        "tmp%4#1"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "depositAmount#0",
        "candidateLo#0",
        "tmp%4#1"
      ]
    },
    "1209": {
      "op": "swap",
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "depositAmount#0",
        "tmp%4#1",
        "candidateLo#0"
      ]
    },
    "1210": {
      "op": "cover 2",
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "candidateLo#0",
        "depositAmount#0",
        "tmp%4#1"
      ]
    },
    "1212": {
      "op": "select",
      "defined_out": [
        "candidateLo#0",
        "vested#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0",
        "vested#0"
      ]
    },
    "1213": {
      "op": "frame_bury 3",
      "defined_out": [
        "candidateLo#0",
        "vested#0"
      ],
      "stack_out": [
        "alreadyClaimed#0",
        "candidateLo#0",
        "periodSecs#0",
        "vested#0",
        "tokenId#0",
        "now#0",
        "startTs#0"
      ]
    },
    "1215": {
      "op": "b claim_after_inlined_smart_contracts/waypoint_linear/waypoint-linear.algo.ts::WaypointLinear.vestedBySchedule@13"
    }
  }
}